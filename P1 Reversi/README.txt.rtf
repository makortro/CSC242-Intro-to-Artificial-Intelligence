{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww22500\viewh8220\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 CSC242\
Project 1\
MaKayla Robinson - mrobin45@u.rochester.edu\
John Moses - jmoses4@u.rochester.edu\
\
Preface: we\'92re both Apple users, so we coded this project using iOS.\
\
To begin, start a terminal window / command prompt in the project folder.\
\
	To compile type: javac Reversi.java\
	To run type:  java Reverse.java\
	To test choose: 1, then type \'910\'92 \'91enter\'92 \'912\'92\
\
Our program allows the human to go first every time; human is always \'91B\'92, so computer is always \'91W\'92.\
\
Issues: We ran out of time to get everything working properly. We worked through the logic of our getLegalMoves() multiple times,\
but can\'92t figure out why the function is returning the improper legal moves per \'91human\'92 position on the board. getMyPieces() works\
properly and passes a list of the current player\'92s pieces into getLegalMoves() to discover every possible action, but returns improper\
moves. getLegalMoves() is supposed to validate if the move the human chooses is legal as well. Lastly, the minimax algorithm is in\
the code but not implemented into game play. There is a comment above it explaining how it works. \
\
We left our print statements in the final code to show that we worked on debugging. In the future we\'92ll start ahead of time and attend office hours for help.\
\
}